/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const HatModel = React.memo(function HatModel(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF('/models/hat-transformed.glb');

  const modelRef = useRef();
  useFrame((state) => {
    if (modelRef.current) {
     // modelRef.current.rotation.x = state.clock.elapsedTime * 0.3;
      modelRef.current.rotation.y = state.clock.elapsedTime * 0.5;
  
    }
  });
  
  return (
    <group {...props}
     dispose={null}
     ref={modelRef}
     scale={[0.04, 0.04, 0.04]}
     rotation={[0,0, 0]}
     position={[0, -5.5, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mjolnir_low_mjolnir_hammer_0.geometry}
        material={materials.mjolnir_hammer}
        position={[-71.507, 150.372, 0]}
        rotation={[Math.PI / 2, -0.687, -Math.PI]}
        scale={6}
      />
    </group>
  );
});
export default HatModel;
useGLTF.preload('/models/hat-transformed.glb');